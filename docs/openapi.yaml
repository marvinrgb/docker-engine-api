openapi: 3.0.3
info: 
  title: Docker Engine API
  description: Custom API on top of the Docker Engine API for more Usability and easy creation of a Docker-Frontend
  version: 0.1.0

paths:
  /container/create:
    post:
      tags:
        - container
      summary: Create a container
      description: Create a new container with the specified properties. Will not automatically start the container.
      requestBody:
        description: Properies for the container that is to create
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - image
              properties: 
                image:
                  type: string
                  description: Name and optionally tag of the image for the container
                  example: mysql
                name:
                  type: string
                  description: Name for the container
                  example: some-mysql
                ports:
                  type: array
                  items:
                    type: object
                    properties: 
                      host:
                        type: number
                        description: Port of the host that should point to the specified container port
                        example: 3306
                      container:
                        type: number
                        description: Port of the container that will be accessible from the specified host port
                        example: 3306

      responses:
        '200':
          description: Container created
          content:
            application/json:
              schema: 
                type: object
                properties:
                  Id:
                    type: string
                    description: ID that the created container was given
                    example: 737676082ef07a2b1d7697e942be4be217b64dff47f31ab4ee473fa3465dfbe8
                  Warnings: 
                    type: array
                    items:
                      type: string
                      description: Warning from docker concerning the created container
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
                description: Error Message
                example: Invalid Payload Data
        '500':
          description: Internal Server Error
          content:
            text/plain:
              schema:
                type: string
                example: request to docker or processing of response failed

  /images:
    get:
      tags:
        - image
      summary: List images
      description: List all downloaded images.
      responses:
        '200':
          description: Returns an array of image objects
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: Image id
                      example: sha256:a7f75473a19f1213968a6637e871450c1d0facf6543904416e82d63a16868047
                    created:
                      type: number
                      description: UNIX Timestamp of image creation
                      example: 1687330011
                    size:
                      type: number
                      description: Image size in Bytes
                      example: 329173041
                    name:
                      type: string
                      description: Image name or image repository name
                      example: grafana/grafana
                    tag:
                      type: string
                      description: Tag of this image version. Can be a number or something like latest
                      example: "18.0.2"
        '500':
          description: Internal Server Error
          content:
            text/plain:
              schema:
                type: string
                example: request to docker or processing of response failed
  /image/check_hub:
    get:
      tags:
        - image
      summary: Check if image exists on Docker Hub
      description: Checks if image exists on Docker Hub and return search results if no image matches query.
      parameters:
        - in: path
          name: image_name
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Success
        '404':
          description: No match on Docker Hub
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties: 
                    name:
                      type: string
                    description:
                      type: string
                    pull_count:
                      type: number
                    star_count:
                      type: number
                    is_trusted:
                      type: boolean
                    is_automated:
                      type: boolean
                    is_official:
                      type: boolean
        '500':
          description: Internal Server Error
          content:
            text/plain:
              schema:
                type: string
                example: request to docker or processing of response failed
  /container/start:
    post:
      tags:
        - container
      summary: Start container
      description: Start an existing container.
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Success
        '400':
          description: container already running
        '404':
          description: container not found
        '500':
          description: Internal Server Error
          content:
            text/plain:
              schema:
                type: string
                example: request to docker or processing of response failed
  /container/stop:
    post:
      tags:
        - container
      summary: Stop container
      description: Stop an existing container.
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Success
        '400':
          description: container not running
        '404':
          description: container not found
        '500':
          description: Internal Server Error
          content:
            text/plain:
              schema:
                type: string
                example: request to docker or processing of response failed
  /containers:
    get:
      tags:
        - container
      summary: List Containers
      description: Lists all existing containers.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/container'
        '500':
          description: Internal Server Error
          content:
            text/plain:
              schema:
                type: string
                example: request to docker or processing of response failed
  /container:
    get:
      tags:
        - container
      summary: Show container info
      description: Show info and resource stats about a containers.
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Container ID from Docker
          example: 29fcf26dcb7ae18f7a0712b4f71c3be7da74d5e9d869ee90f312e9f191796714
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/container_stats'
        '500':
          description: Internal Server Error
          content:
            text/plain:
              schema:
                type: string
                example: request to docker or processing of response failed
        
                




components:
  schemas:
    'container_stats':
      type: object
      properties:
        name:
          type: string
          description: Name of the container
          example: grafana/grafana
        id:
          type: string
          description: Container ID from Docker
          example: 9f73cc373cd69fdb891d339fadf0a662d4937a131b962853b942cedcc519413c
        created:
          type: string
          description: Creation date of container. YYYY-MM-DDTHH":"MM":"SS.MSMSMSMSZ
          example: "2023-05-09T06:36:22.949537039Z"
        state:
          type: object
          properties:
            Status:
              type: string
              description: Container status from Docker
              example: running
            Running:
              type: boolean
              description: True if container is running
              example: true
            Paused:
              type: boolean
              description: True if container is paused
              example: false
            Restarting:
              type: boolean
              description: True if container is restarting
              example: false
            OOMKilled:
              type: boolean
              description: True if container was killed due to an OOM Condition (Out of Memory)
              example: false
            Dead:
              type: boolean
              description: True if container is dead (stopped due to completion, an error or manual stop)
              example: false
            Pid:
              type: number
              description: Process ID of the container
              example: 4016
            ExitCode:
              type: number
              description: ExitCode from Docker
              example: 0 
            Error:
              type: string
              description: Error message if container stopped due to an error
              example: ""
            StartedAt:
              type: string
              description: Last starting date of container
              example: "2023-05-09T06:36:22.949537039Z"
            FinishedAt:
              type: string
              description: Last stopping date of container
              example: "2023-05-09T06:36:22.949537039Z"
        imageName:
          type: string
          description: Name of the image. Will match imageId if image has no name.
          example: mysql
        imageId:
          type: string
          description: Image ID from Docker
          example: sha256:a7f75473a19f1213968a6637e871450c1d0facf6543904416e82d63a16868047
        restartCount:
          type: number
          description: Amount of restarts since creation of the container
          example: 0
        env:
          type: array
          items:
            type: array
            items:
              type: string
              description: Displays Environmentvariables in Arrays with each a Key-Value-Pair
            example: [MYSQL_USER, testuser]
        stats:
          type: object
          properties: 
            memory:
              type: object
              properties:
                percentage:
                  type: number
                  description: Percentage of system RAM that is used by this container. Will be null if calcutlation was unsuccessful.
                  example: 3.26
                used:
                  type: number
                  description: Used RAM by container in MB. Will be null if calcutlation was unsuccessful.
                  example: 535.66
                max:
                  type: number
                  description: Maximum RAM available to the container in MB. Will use system RAM if not specified.
                  example: 16456.15
            cpu:
              type: object
              properties:
                percentage:
                  type: number
                  description: Percentage of system CPU that is used by this container. Will be null if calcutlation was unsuccessful.
    'container':
      type: object
      properties:
        id:
          type: string
          description: Container ID from Docker
          example: 29fcf26dcb7ae18f7a0712b4f71c3be7da74d5e9d869ee90f312e9f191796714
        image:
          type: string
          description: Image name from Docker. Will match image_id if Docker has no specified name.
          example: grafana/grafana
        image_id:
          type: string
          description: Image ID from Docker
          example: sha256:a7f75473a19f1213968a6637e871450c1d0facf6543904416e82d63a16868047
        created:
          type: number
          description: UNIX Timestamp for the creation date of the Docker Container
          example: 1683614182
        status:
          type: string
          description: Status text from Docker
          example: Exited (1) 8 days ago
        ports:
          type: object
          properties:
            IP:
              type: string
              description: IP used for port mapping. Will most of the time be 0.0.0.0 or 127.0.0.1
              example: 0.0.0.0
            PrivatePort:
              type: number
              description: Port from inside the container that is being mapped.
              example: 3000
            PublicPort:
              type: number
              description: Host port that is mapped to the internal container port and accessible from outside.
              example: 3000
            Type:
              type: string
              description: Type/Protocol of the mapped port.
              example: tcp
